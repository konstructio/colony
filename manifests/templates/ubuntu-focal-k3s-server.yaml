apiVersion: "tinkerbell.org/v1alpha1"
kind: Template
metadata:
  name: ubuntu-focal-k3s-server
  namespace: tink-system
spec:
  data: |
    version: "0.1"
    name: ubuntu_Focal
    global_timeout: 1800
    tasks:
      - name: "os-installation"
        worker: "{{.device_1}}"
        volumes:
          - /dev:/dev
          - /dev/console:/dev/console
          - /lib/firmware:/lib/firmware:ro
        actions:
          - name: "stream-ubuntu-image"
            image: quay.io/tinkerbell-actions/image2disk:v1.0.0
            timeout: 600
            environment:
              DEST_DISK: {{ .disk }}
              IMG_URL: "http://{{ .artifact_server_ip_port }}/jammy-server-cloudimg-amd64.raw.gz"
              COMPRESSED: true
          - name: "grow-partition"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ .disk }}{{.block_partition}}
              FS_TYPE: ext4
              CHROOT: y
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "growpart {{ .disk }} 1 && resize2fs {{ .disk }}{{.block_partition}}"
          - name: "install-openssl"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ .disk }}{{.block_partition}}
              FS_TYPE: ext4
              CHROOT: y
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "apt -y update && apt -y install openssl"
          - name: "create-user"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ .disk }}{{.block_partition}}
              FS_TYPE: ext4
              CHROOT: y
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "useradd -p $(openssl passwd -1 tink) -s /bin/bash -d /home/tink/ -m -G sudo tink"
          - name: "enable-ssh"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ .disk }}{{.block_partition}}
              FS_TYPE: ext4
              CHROOT: y
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "ssh-keygen -A; systemctl enable ssh.service; echo 'PasswordAuthentication yes' > /etc/ssh/sshd_config.d/60-cloudimg-settings.conf"
          - name: "disable-apparmor"
            image: quay.io/tinkerbell-actions/cexec:v1.0.0
            timeout: 90
            environment:
              BLOCK_DEVICE: {{ .disk }}{{.block_partition}}
              FS_TYPE: ext4
              CHROOT: y
              DEFAULT_INTERPRETER: "/bin/sh -c"
              CMD_LINE: "systemctl disable apparmor; systemctl disable snapd"
          - name: "disable-network-config"
            image: quay.io/tinkerbell-actions/writefile:v1.0.0
            timeout: 90
            environment:
              DEST_DISK: {{ .disk }}{{.block_partition}}
              FS_TYPE: ext4
              DEST_PATH: /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg
              CONTENTS: |
                network:
                  config: disabled
              UID: 0
              GID: 0
              MODE: 0644
              DIRMODE: 0755

          - name: "static-ip"
            image: quay.io/tinkerbell-actions/writefile:v1.0.0
            timeout: 90
            environment:
              DEST_DISK: {{ .disk }}{{.block_partition}}
              FS_TYPE: ext4
              DEST_PATH: /etc/netplan/100-static-ip.yaml
              CONTENTS: |
                network:
                  version: 2
                  renderer: networkd
                  ethernets:
                    id0:
                      match:
                        macaddress: "{{ .device_1 }}"
                      dhcp4: false
                      addresses:
                        - {{ .static_ip }}
                      routes:
                        - to: default
                          via: {{ .gateway }}
                      nameservers:
                        addresses:
                          - 8.8.8.8
                          - 8.8.4.4
              UID: 0
              GID: 0
              MODE: 0644
              DIRMODE: 0755
          - name: "k3s-installation"
            image: quay.io/tinkerbell-actions/writefile:v1.0.0
            timeout: 120
            environment:
              DEST_DISK: {{ .disk }}{{.block_partition}}
              FS_TYPE: ext4
              DEST_PATH: "/var/lib/cloud/seed/nocloud-net/user-data"
              CONTENTS: |
                #cloud-config
                runcmd:
                  - apt -y update
                  - apt -y install curl
                  - |
                    multi_master="{{ .multi_master }}"
                    if [ "$multi_master" = "true" ]; then
                      echo "Multi master cluster"
                      curl -sfL https://get.k3s.io | sh -s server --cluster-init --tls-san={{ .extra_sans }}
                    else
                      echo "Single master cluster"
                      curl -sfL https://get.k3s.io | sh -s - --tls-san={{ .extra_sans }}
                    fi
                  - |
                    # Report final status of cloud init
                    curl -L -o colony-scout.tar.gz https://objectstore.nyc1.civo.com/konstruct-assets/colony-scout/v0.0.10-rc12/colony-scout_0.0.10-rc12_Linux_x86_64.tar.gz
                    tar -xzvf colony-scout.tar.gz
                    chmod +x colony-scout
                    K3S_TOKEN=$(cat /var/lib/rancher/k3s/server/node-token)
                    output=$(./colony-scout report --validate=k8s,cloud-init \
                      --type=server \
                      --token={{ .colony_token }} \
                      --colony-api={{ .colony_api_url }} \
                      --cluster-id={{ .colony_cluster_id }} \
                      --workflow-id={{ .colony_workflow_id }} \
                      --hardware-id={{ .colony_hardware_id }} \
                      --host-ip-port={{ .static_ip }}:6443 \
                      --kubeconfig=/etc/rancher/k3s/k3s.yaml \
                      --k3s-token=$K3S_TOKEN 2>&1)
                    echo "Colony scout output: $output"
              UID: 0
              GID: 0
              MODE: 0644
              DIRMODE: 0755
          - name: "write-meta-data"
            image: quay.io/tinkerbell-actions/writefile:v1.0.0
            timeout: 90
            environment:
              DEST_DISK: {{ .disk }}{{.block_partition}}
              FS_TYPE: ext4
              DEST_PATH: "/var/lib/cloud/seed/nocloud-net/meta-data"
              CONTENTS: |
                instance-id: {{ .device_1 }}
                local-hostname: {{ .hostname }}
              UID: 0
              GID: 0
              MODE: 0644
              DIRMODE: 0755
          - name: "kexec"
            image: ghcr.io/jacobweinstock/waitdaemon:latest
            timeout: 90
            pid: host
            environment:
              BLOCK_DEVICE: {{ formatPartition ( .disk ) 1 }}
              FS_TYPE: ext4
              IMAGE: quay.io/tinkerbell-actions/kexec:v1.0.0
              WAIT_SECONDS: 10
            volumes:
              - /var/run/docker.sock:/var/run/docker.sock
